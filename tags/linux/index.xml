<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>linux on 苏苏的博客</title>
    <link>http://blog.suconghou.cn/tags/linux/</link>
    <description>Recent content in linux on 苏苏的博客</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Thu, 21 Jan 2016 13:40:53 +0800</lastBuildDate>
    
	<atom:link href="http://blog.suconghou.cn/tags/linux/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>linux相关操作</title>
      <link>http://blog.suconghou.cn/post/linux/</link>
      <pubDate>Thu, 21 Jan 2016 13:40:53 +0800</pubDate>
      
      <guid>http://blog.suconghou.cn/post/linux/</guid>
      <description>读取文件的前几字节 head 或 tail 以字节而不是以行为单位，那该怎么办呢？您可以用 -c 选项代替 -n 选项
前100字节,并以hex格式显示 head -c 100 file | hexdump 
后100字节tail -c 100 file | hexdump
还可以使用管道交给 md5sum,可比较前100字节或后100字节是否相同
head -c 100 file | hexdump | md5sum
取文件1G(1073741824)至+819200处的md5值
head -c 1074561024 file | tail -c 819200 |md5sum
使用dd会更加方便,也更高效
dd if=file bs=1 skip=1073741824 count=819200 | md5sum
拆分文件 split -b 1kb /tmp/file sfile
拆分文件大小为1k，也可以是1b，或者1m之类的单位
xxd hexdump od https://www.zhihu.com/question/40441308/answer/86637730
时间戳转时间日期 Mac: date -r 1514131200 GNU/Linux: date -d @1514131200</description>
    </item>
    
    <item>
      <title>SSH</title>
      <link>http://blog.suconghou.cn/post/linux-ssh/</link>
      <pubDate>Thu, 07 Jan 2016 13:47:22 +0800</pubDate>
      
      <guid>http://blog.suconghou.cn/post/linux-ssh/</guid>
      <description>避免SSH自动断开连接 如果有一段时间在SSH连接上无数据传输，连接就会断开,以下设定可以解决这个问题
方案一：在客户端设置
sudo vim /etc/ssh/ssh_config
开启 ServerAliveInterval 60 开启 TCPKeepAlive yes
此后该系统里的用户连接SSH时，每60秒会发一个KeepAlive请求，避免被踢。
方案二：在服务器端设置
sudo vim /etc/ssh/sshd_config
开启ClientAliveInterval 60 开启 TCPKeepAlive yes
如果您只想让当前的 ssh 保持连接，可以使用以下的命令：
ssh -o ServerAliveInterval=60 user@sshserver
ssh 链接复用
Host * ForwardAgent yes ServerAliveInterval 30 ServerAliveCountMax 20 TCPKeepAlive no ControlMaster auto ControlPath ~/.ssh/connection-%r@%h:%p ControlPersist 20m Compression yes http://einverne.github.io/post/2017/05/ssh-keep-alive.html
https://www.cyberciti.biz/faq/linux-unix-reuse-openssh-connection/
ssh隧道 CfNg参数  C表示压缩数据传输 f表示后台用户验证,这个选项很有用,没有shell的不可登陆账号也能使用. N表示不执行脚本或命令 g表示允许远程主机连接转发端口,往往会没有效果,需要修改/etc/ssh/sshd_config添加gatewayports yes T禁止分配伪终端，如果ssh使用此选项登录系统时，由于禁用，将无法获得终端；但仍能够获得shell，只不过看起来像在本地，也没有很多应有的环境变量，例如命令提示符，PS1等 n Redirects stdin from /dev/null (actually, prevents reading from stdin). This must be used when ssh is run in the background  -L本地转发 -L [本地监听IP:]本地监听端口号:目标主机IP:目标端口号 (其中,“本地监听IP”可以省略，省略的话就认为是“0.</description>
    </item>
    
    <item>
      <title>Linux下常用的下载利器</title>
      <link>http://blog.suconghou.cn/post/linux-download-tools/</link>
      <pubDate>Fri, 01 Jan 2016 23:54:20 +0800</pubDate>
      
      <guid>http://blog.suconghou.cn/post/linux-download-tools/</guid>
      <description>wget wget -c -O filename &amp;quot;http://xx.com&amp;quot;  下载存储到指定文件,并指定断点续传
wget -nc -c -i url.txt 批量下载文件中指定的资源(每行一个连接),跳过已下载的(同名的),并且断点续传.
wget -i url.txt -O - | mpv - 下载url.txt里的链接,输出到标准输出
使用user-agent
wget --user-agent=&amp;quot;Mozilla/5.0 (Macintosh; Intel Mac OS X 10_12_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/54.0.2840.71 Safari/537.36&amp;quot; URL-TO-DOWNLOAD
wget 断点续传 使用 -c 限速使用--limit-rate=300k
wget -c --limit-rate=30k http://...
lftp wget 可以断点续传 但是不支持多线程下载, lftp 的一个用法可以实现多线程下载.
lftp -c &amp;quot;pget -n 10 http://www.kernel.org/pub/linux/kernel/v2.6/linux-2.6.18.tar.gz&amp;quot;
curl Windows 编译好的下载
https://curl.haxx.se/dlwiz/?type=bin&amp;amp;os=Win64&amp;amp;flav=-
常用的命令
curl http://xx.com 只获取http消息正文
curl -I http://xx.</description>
    </item>
    
    <item>
      <title>Linux下同步文件的多种方法</title>
      <link>http://blog.suconghou.cn/post/sync-files-on-linux/</link>
      <pubDate>Sat, 21 Nov 2015 23:55:54 +0800</pubDate>
      
      <guid>http://blog.suconghou.cn/post/sync-files-on-linux/</guid>
      <description>采用scp同步 采用rsync同步 rsync -arvuzpt --progress /data/project/21text/static/ root@172.168.1.3:/data/web/21text/static/; mac上结合fswatch自动同步
sync1() { dir=/data/project/21textv3/ while true do rsync -arvuzpt --progress --exclude=&amp;quot;.git&amp;quot; /data/project/21textv3/ root@172.168.1.3:/data/web/21textv3/ echo &amp;quot;start morniting folder $dir&amp;quot; fswatch -1 $dir sleep 2 done } LFTP 同步 brew install lftp
登陆ftp lftp user:pass@ftphost:21
解决办法很简单。只要你能充分相信你的host，就在 lftp 里加上这样一句
set ssl:verify-certificate no
或者，可以在敲 lftp 命令的时候这样输入：
lftp -e &amp;ldquo;set ssl:verify-certificate no&amp;rdquo;
lftp -e &amp;ldquo;set ssl-allow false&amp;rdquo; ftp://user:pass@host:21
rclone 也支持ftp
rclone lsf :ftp: &amp;ndash;ftp-host=speedtest.tele2.net &amp;ndash;ftp-user=anonymous &amp;ndash;ftp-pass=rclone obscure dummy</description>
    </item>
    
  </channel>
</rss>